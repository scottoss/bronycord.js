{"version":3,"file":"ChannelGroupLeave.js","sourceRoot":"","sources":["../../../src/client/actions/ChannelGroupLeave.ts"],"names":[],"mappings":";;;AAAA,qCAAiC;AAEjC,qCAAmC;AAEnC,MAAa,uBAAwB,SAAQ,eAAM;IAC/C,MAAM,CAAC,IAAkC;QACrC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAiB,CAAA;QACrE,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAEnD,IAAI,KAAK,EAAE;YACP,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,CAAA;SAC7D;QAED,IAAI,KAAK,IAAI,IAAI,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAM,CAAC,WAAW,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;SACpD;QAED,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,CAAA;IAC1B,CAAC;CACJ;AAfD,0DAeC","sourcesContent":["import { Action } from './Action'\nimport { GroupChannel } from '../../structures'\nimport { Events } from '../../util'\n\nexport class ChannelGroupLeaveAction extends Action {\n    handle(data: { id: string; user: string }): unknown {\n        const group = this.client.channels.cache.get(data.id) as GroupChannel\n        const user = this.client.users.cache.get(data.user)\n\n        if (group) {\n            group._users = group._users.filter(id => id !== data.user)\n        }\n\n        if (group && user) {\n            this.client.emit(Events.GROUP_LEAVE, group, user)\n        }\n\n        return { group, user }\n    }\n}\n"]}