{"version":3,"file":"UserUpdate.js","sourceRoot":"","sources":["../../../src/client/actions/UserUpdate.ts"],"names":[],"mappings":";;;AACA,qCAAiC;AACjC,oDAA6C;AAE7C,MAAa,gBAAiB,SAAQ,eAAM;IACxC,MAAM,CAAC,IAAmC;QACtC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;QAEpD,IAAI,OAAO,EAAE;YACT,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YAE1C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,CAAA;YAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAM,CAAC,WAAW,EAAE,OAAO,EAAE,OAAO,CAAC,CAAA;YAEtD,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,CAAA;SAC9B;QAED,OAAO,EAAE,OAAO,EAAE,CAAA;IACtB,CAAC;CACJ;AAfD,4CAeC","sourcesContent":["import { User as RawUser } from 'revolt-api/types/Users'\nimport { Action } from './Action'\nimport { Events } from '../../util/Constants'\n\nexport class UserUpdateAction extends Action {\n    handle(data: { id: string; data: RawUser }): unknown {\n        const oldUser = this.client.users.cache.get(data.id)\n\n        if (oldUser) {\n            const newUser = oldUser._update(data.data)\n\n            this.client.users.cache.set(newUser.id, newUser)\n            this.client.emit(Events.USER_UPDATE, oldUser, newUser)\n\n            return { newUser, oldUser }\n        }\n\n        return { oldUser }\n    }\n}\n"]}