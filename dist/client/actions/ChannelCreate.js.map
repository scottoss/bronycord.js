{"version":3,"file":"ChannelCreate.js","sourceRoot":"","sources":["../../../src/client/actions/ChannelCreate.ts"],"names":[],"mappings":";;;AACA,qCAAiC;AACjC,oDAA6C;AAE7C,MAAa,mBAAoB,SAAQ,eAAM;IAC3C,KAAK,CAAC,MAAM,CAAC,IAAgB;;QACzB,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAE/C,IAAI,OAAO,EAAE;YACT,IAAI,OAAO,CAAC,QAAQ,EAAE,EAAE;gBACpB,MAAM,MAAM,GAAG,MAAA,OAAO,CAAC,MAAM,mCAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAA;gBACpF,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,CAAA;aACjD;YACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAM,CAAC,cAAc,EAAE,OAAO,CAAC,CAAA;SACnD;QAED,OAAO,EAAE,OAAO,EAAE,CAAA;IACtB,CAAC;CACJ;AAdD,kDAcC","sourcesContent":["import { Channel as RawChannel } from 'revolt-api/types/Channels'\nimport { Action } from './Action'\nimport { Events } from '../../util/Constants'\n\nexport class ChannelCreateAction extends Action {\n    async handle(data: RawChannel): Promise<unknown> {\n        const channel = this.client.channels._add(data)\n\n        if (channel) {\n            if (channel.inServer()) {\n                const server = channel.server ?? (await this.client.servers.fetch(channel.serverId))\n                server.channels.cache.set(channel.id, channel)\n            }\n            this.client.emit(Events.CHANNEL_CREATE, channel)\n        }\n\n        return { channel }\n    }\n}\n"]}