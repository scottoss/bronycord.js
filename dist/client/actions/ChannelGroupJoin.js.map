{"version":3,"file":"ChannelGroupJoin.js","sourceRoot":"","sources":["../../../src/client/actions/ChannelGroupJoin.ts"],"names":[],"mappings":";;;AAAA,qCAAiC;AAEjC,oDAA6C;AAE7C,MAAa,sBAAuB,SAAQ,eAAM;IAC9C,KAAK,CAAC,MAAM,CAAC,IAAkC;QAC3C,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAiB,CAAA;QAErE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAE7B,IAAI,KAAK,EAAE;YACP,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAA;YACvE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAM,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;YAChD,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,CAAA;SACzB;QAED,OAAO,EAAE,KAAK,EAAE,CAAA;IACpB,CAAC;CACJ;AAdD,wDAcC","sourcesContent":["import { Action } from './Action'\nimport { GroupChannel } from '../../structures'\nimport { Events } from '../../util/Constants'\n\nexport class ChannelGroupJoinAction extends Action {\n    async handle(data: { id: string; user: string }): Promise<unknown> {\n        const group = this.client.channels.cache.get(data.id) as GroupChannel\n\n        group?._users.push(data.user)\n\n        if (group) {\n            const user = await this.client.users.fetch(data.user, { force: false })\n            this.client.emit(Events.GROUP_JOIN, group, user)\n            return { group, user }\n        }\n\n        return { group }\n    }\n}\n"]}