{"version":3,"file":"ChannelDelete.js","sourceRoot":"","sources":["../../../src/client/actions/ChannelDelete.ts"],"names":[],"mappings":";;;AAAA,qCAAiC;AACjC,oDAA6C;AAE7C,MAAa,mBAAoB,SAAQ,eAAM;IAC3C,MAAM,CAAC,IAAoB;;QACvB,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;QAEvD,IAAI,OAAO,EAAE;YACT,OAAO,CAAC,OAAO,GAAG,IAAI,CAAA;YAEtB,IAAI,OAAO,CAAC,QAAQ,EAAE,EAAE;gBACpB,MAAA,OAAO,CAAC,MAAM,0CAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;aACpD;YAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAM,CAAC,cAAc,EAAE,OAAO,CAAC,CAAA;SACnD;QAED,OAAO,EAAE,OAAO,EAAE,CAAA;IACtB,CAAC;CACJ;AAhBD,kDAgBC","sourcesContent":["import { Action } from './Action'\nimport { Events } from '../../util/Constants'\n\nexport class ChannelDeleteAction extends Action {\n    handle(data: { id: string }): unknown {\n        const channel = this.client.channels.cache.get(data.id)\n\n        if (channel) {\n            channel.deleted = true\n\n            if (channel.inServer()) {\n                channel.server?.channels.cache.delete(channel.id)\n            }\n\n            this.client.emit(Events.CHANNEL_DELETE, channel)\n        }\n\n        return { channel }\n    }\n}\n"]}