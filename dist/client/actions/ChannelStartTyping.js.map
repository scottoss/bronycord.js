{"version":3,"file":"ChannelStartTyping.js","sourceRoot":"","sources":["../../../src/client/actions/ChannelStartTyping.ts"],"names":[],"mappings":";;;AAAA,qCAAiC;AAEjC,qCAAmC;AAEnC,MAAa,wBAAyB,SAAQ,eAAM;IAChD,MAAM,CAAC,IAAkC;QACrC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAqB,CAAA;QAC3E,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAEnD,IAAI,OAAO,IAAI,IAAI,EAAE;YACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAM,CAAC,YAAY,EAAE,OAAO,EAAE,IAAI,CAAC,CAAA;SACvD;QAED,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAA;IAC5B,CAAC;CACJ;AAXD,4DAWC","sourcesContent":["import { Action } from './Action'\nimport { TextBasedChannel } from '../../structures/interfaces/TextBasedChannel'\nimport { Events } from '../../util'\n\nexport class ChannelStartTypingAction extends Action {\n    handle(data: { id: string; user: string }): unknown {\n        const channel = this.client.channels.cache.get(data.id) as TextBasedChannel\n        const user = this.client.users.cache.get(data.user)\n\n        if (channel && user) {\n            this.client.emit(Events.TYPING_START, channel, user)\n        }\n\n        return { channel, user }\n    }\n}\n"]}