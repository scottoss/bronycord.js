{"version":3,"file":"Message.js","sourceRoot":"","sources":["../../../src/client/actions/Message.ts"],"names":[],"mappings":";;;AACA,qCAAiC;AAEjC,oDAA6C;AAE7C,MAAa,aAAc,SAAQ,eAAM;IACrC,MAAM,CAAC,IAAgB;QACnB,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAqB,CAAA;QAEhF,IAAI,OAAO,EAAE;YACT,MAAM,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YAE3C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAM,CAAC,OAAO,EAAE,OAAO,CAAC,CAAA;YAEzC,OAAO,EAAE,OAAO,EAAE,CAAA;SACrB;QAED,OAAO,EAAE,CAAA;IACb,CAAC;CACJ;AAdD,sCAcC","sourcesContent":["import { Message as RawMessage } from 'revolt-api/types/Channels'\nimport { Action } from './Action'\nimport { TextBasedChannel } from '../../structures/interfaces/TextBasedChannel'\nimport { Events } from '../../util/Constants'\n\nexport class MessageAction extends Action {\n    handle(data: RawMessage): unknown {\n        const channel = this.client.channels.cache.get(data.channel) as TextBasedChannel\n\n        if (channel) {\n            const message = channel.messages._add(data)\n\n            this.client.emit(Events.MESSAGE, message)\n\n            return { message }\n        }\n\n        return {}\n    }\n}\n"]}