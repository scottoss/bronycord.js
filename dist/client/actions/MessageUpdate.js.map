{"version":3,"file":"MessageUpdate.js","sourceRoot":"","sources":["../../../src/client/actions/MessageUpdate.ts"],"names":[],"mappings":";;;AACA,qCAAiC;AAEjC,oDAA6C;AAE7C,MAAa,mBAAoB,SAAQ,eAAM;IAC3C,MAAM,CAAC,IAAuD;QAC1D,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAqB,CAAA;QAChF,MAAM,UAAU,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;QAEvD,IAAI,UAAU,EAAE;YACZ,MAAM,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;YAEhD,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,EAAE,UAAU,CAAC,CAAA;YAErD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAM,CAAC,cAAc,EAAE,UAAU,EAAE,UAAU,CAAC,CAAA;YAE/D,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,CAAA;SACpC;QAED,OAAO,EAAE,UAAU,EAAE,CAAA;IACzB,CAAC;CACJ;AAjBD,kDAiBC","sourcesContent":["import { Message as RawMessage } from 'revolt-api/types/Channels'\nimport { Action } from './Action'\nimport { TextBasedChannel } from '../../structures/interfaces/TextBasedChannel'\nimport { Events } from '../../util/Constants'\n\nexport class MessageUpdateAction extends Action {\n    handle(data: { id: string; channel: string; data: RawMessage }): unknown {\n        const channel = this.client.channels.cache.get(data.channel) as TextBasedChannel\n        const oldMessage = channel?.messages.cache.get(data.id)\n\n        if (oldMessage) {\n            const newMessage = oldMessage._update(data.data)\n\n            channel.messages.cache.set(newMessage.id, newMessage)\n\n            this.client.emit(Events.MESSAGE_UPDATE, oldMessage, newMessage)\n\n            return { newMessage, oldMessage }\n        }\n\n        return { oldMessage }\n    }\n}\n"]}