{"version":3,"file":"ClientUser.js","sourceRoot":"","sources":["../../src/structures/ClientUser.ts"],"names":[],"mappings":";;;AACA,iCAA6B;AAE7B,MAAa,UAAW,SAAQ,WAAI;IAApC;;QACI,UAAK,GAAwB,IAAI,CAAA;IAgBrC,CAAC;IAdG,KAAK,CAAC,WAAW,CAAC,QAAgB,EAAE,QAAiB;QACjD,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,EAAE,WAAW,EAAE;YACtD,IAAI,EAAE;gBACF,QAAQ;gBACR,QAAQ;aACX;SACJ,CAAC,CAAA;IACN,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,MAA8E;QAC1F,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE;YACrC,IAAI,EAAE,EAAE,MAAM,EAAE;SACnB,CAAC,CAAA;IACN,CAAC;CACJ;AAjBD,gCAiBC","sourcesContent":["import type { NotesChannel } from '.'\nimport { User } from './User'\n\nexport class ClientUser extends User {\n    notes: NotesChannel | null = null\n\n    async setUsername(username: string, password?: string): Promise<void> {\n        await this.client.api.patch(`/users/${this.id}/username`, {\n            body: {\n                username,\n                password\n            }\n        })\n    }\n\n    async setStatus(status: { text?: string; presence?: 'Online' | 'Idle' | 'Busy' | 'Invisible' }): Promise<void> {\n        await this.client.api.patch('/users/id', {\n            body: { status }\n        })\n    }\n}\n"]}