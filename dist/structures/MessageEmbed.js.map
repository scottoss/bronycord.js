{"version":3,"file":"MessageEmbed.js","sourceRoot":"","sources":["../../src/structures/MessageEmbed.ts"],"names":[],"mappings":";;;AAuBA,MAAa,YAAY;IAYrB,YAAY,OAAuB,EAAE;QAXrC,SAAI,GAAkB,SAAS,CAAA;QAY3B,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;IAC7B,CAAC;IAED,QAAQ,CAAC,KAAa;QAClB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,OAAO,IAAI,CAAA;IACf,CAAC;IAED,OAAO,CAAC,OAAe;QACnB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAA;QACvB,OAAO,IAAI,CAAA;IACf,CAAC;IAED,QAAQ,CAAC,KAAa;QAClB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,OAAO,IAAI,CAAA;IACf,CAAC;IAED,cAAc,CAAC,WAAmB;QAC9B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAA;QAC9B,OAAO,IAAI,CAAA;IACf,CAAC;IAED,MAAM,CAAC,GAAW;QACd,IAAI,CAAC,GAAG,GAAG,GAAG,CAAA;QACd,OAAO,IAAI,CAAA;IACf,CAAC;IAED,MAAM;QACF,OAAO;YACH,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,GAAG,EAAE,IAAI,CAAC,GAAG;SAChB,CAAA;IACL,CAAC;CACJ;AAjDD,oCAiDC","sourcesContent":["import { Embed } from 'revolt-api/types/January'\n\nexport type EmbedImage = {\n    url: string\n    width: number\n    height: number\n    size: 'Large' | 'Preview'\n}\n\nexport type EmbedVideo = {\n    url: string\n    width: number\n    height: number\n}\n\nexport type EmbedSpecial =\n    | { type: 'None' }\n    | { type: 'YouTube'; id: string }\n    | { type: 'Twitch'; content_type: 'Channel' | 'Video' | 'Clip'; id: string }\n    | { type: 'Spotify'; content_type: string; id: string }\n    | { type: 'Soundcloud' }\n    | { type: 'Bandcamp'; content_type: 'Album' | 'Track'; id: string }\n\nexport class MessageEmbed {\n    type: Embed['type'] = 'Website'\n    url?: string\n    special?: EmbedSpecial\n    title?: string\n    description?: string\n    image?: EmbedImage\n    video?: EmbedVideo\n    site_name?: string\n    icon_url?: string\n    color?: string\n\n    constructor(data: Partial<Embed> = {}) {\n        Object.assign(this, data)\n    }\n\n    setTitle(title: string): this {\n        this.title = title\n        return this\n    }\n\n    setIcon(iconURL: string): this {\n        this.icon_url = iconURL\n        return this\n    }\n\n    setColor(color: string): this {\n        this.color = color\n        return this\n    }\n\n    setDescription(description: string): this {\n        this.description = description\n        return this\n    }\n\n    setURL(url: string): this {\n        this.url = url\n        return this\n    }\n\n    toJSON(): unknown {\n        return {\n            title: this.title,\n            type: this.type,\n            description: this.description,\n            url: this.url\n        }\n    }\n}\n"]}