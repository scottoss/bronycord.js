{"version":3,"file":"Role.js","sourceRoot":"","sources":["../../src/structures/Role.ts"],"names":[],"mappings":";;;AACA,wBAAgC;AAChC,kCAA8B;AAE9B,MAAa,IAAK,SAAQ,OAAI;IAI1B,YAAmB,MAAc,EAAE,IAA8B;QAC7D,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;QADL,WAAM,GAAN,MAAM,CAAQ;QADjC,UAAK,GAAkB,IAAI,CAAA;QAGvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;IACrB,CAAC;IAED,MAAM,CAAC,IAA+B;;QAClC,IAAI,IAAI,CAAC,EAAE,EAAE;YACT,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAA;SACpB;QAED,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;SACxB;QAED,IAAI,QAAQ,IAAI,IAAI,EAAE;YAClB,IAAI,CAAC,KAAK,GAAG,MAAA,IAAI,CAAC,MAAM,mCAAI,IAAI,CAAA;SACnC;QAED,OAAO,IAAI,CAAA;IACf,CAAC;IAED,OAAO,CAAC,IAA8B;QAClC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAA;QAC3B,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;QAClB,OAAO,KAAK,CAAA;IAChB,CAAC;IAED,IAAI,SAAS;QACT,OAAO,WAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;IACpC,CAAC;IAED,IAAI,gBAAgB;QAChB,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAA;IACnC,CAAC;IAED,KAAK,CAAC,MAAM;QACR,MAAM,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;IACxC,CAAC;IAED,QAAQ;QACJ,OAAO,MAAM,IAAI,CAAC,EAAE,GAAG,CAAA;IAC3B,CAAC;CACJ;AA9CD,oBA8CC","sourcesContent":["import { Role as RawRole } from 'revolt-api/types/Servers'\nimport { Base, Server } from '.'\nimport { UUID } from '../util'\n\nexport class Role extends Base {\n    id!: string\n    name!: string\n    color: string | null = null\n    constructor(public server: Server, data: RawRole & { id: string }) {\n        super(server.client)\n        this._patch(data)\n    }\n\n    _patch(data: RawRole & { id?: string }): this {\n        if (data.id) {\n            this.id = data.id\n        }\n\n        if (data.name) {\n            this.name = data.name\n        }\n\n        if ('colour' in data) {\n            this.color = data.colour ?? null\n        }\n\n        return this\n    }\n\n    _update(data: RawRole & { id: string }): this {\n        const clone = this._clone()\n        clone._patch(data)\n        return clone\n    }\n\n    get createdAt(): Date {\n        return UUID.extrectTime(this.id)\n    }\n\n    get createdTimestamp(): number {\n        return this.createdAt.getTime()\n    }\n\n    async delete(): Promise<void> {\n        await this.server.roles.delete(this)\n    }\n\n    toString(): string {\n        return `<@&${this.id}>`\n    }\n}\n"]}